name: Deploy GitHub Pages

on:
  push:
    branches: ["master"]

  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Pages
        uses: actions/configure-pages@v3      

      - name: Get number of commits in current branch
        id: get_commits
        run: echo "COMMITS=$(git rev-list --count master)" >> "$GITHUB_OUTPUT"
      
      - name: Get Short SHA
        id: get_short_sha
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> "$GITHUB_OUTPUT"

      # Move all files to v{commits} folder
      - name: Move files
        run: |
          mv * v${{ steps.get_commits.outputs.COMMITS }} | mkdir v${{ steps.get_commits.outputs.COMMITS }}

      - name: Checkout gh-pages
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          clean: false

      # Remove "latest" folder and copy v{commits} folder to "latest"
      - name: Create latest folder
        run: |
          rm -rf latest
          cp -r v${{ steps.get_commits.outputs.COMMITS }} latest

      # Commit and push changes to gh-pages
      - name: Commit and push changes
        run: |
          git config --global user.email "ETdoFresh@gmail.com"
          git config --global user.name "ETdoFresh"
          git add .
          git commit -m "Deploy v${{ steps.get_commits.outputs.COMMITS }} to GitHub Pages"
          git push

      # Dispay folders on GitHub Pages
      - name: Display folders
        run: |
          ls -l
          ls -l latest
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
      
      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_USERNAME: GitHub Actions
          DISCORD_EMBEDS: '[    { 
            "author": {  "icon_url": "https://avatars.githubusercontent.com/${{ github.actor }}", "name": "${{ github.actor }}", "url": "https://github.com/${{github.actor}}" },
            "url": "https://github.com/${{github.repository}}/commit/${{github.sha}}",
            "fields": [
            { "name": "Repository", "value": "[${{github.event.repository.name}}](${{github.event.repository.clone_url}})", "inline": true },
            { "name": "Branch", "value": "[${{github.ref_name}}](https://github.com/${{github.repository}}/tree/${{github.ref_name}})", "inline": true },
            { "name": "Event", "value": "${{github.event_name}}", "inline": true },
            { "name": "Commit", "value": "[${{steps.get_short_sha.outputs.SHORT_SHA}}](https://github.com/${{github.repository}}/commit/${{github.sha}})", "inline": true },
            { "name": "Version", "value": "*v${{steps.get_commits.outputs.COMMITS}}*", "inline": true },
            { "name": "Commit Message", "value": "`${{github.event.head_commit.message}}`" }
            ],
            "color":6710886,
            "timestamp": "${{github.event.head_commit.timestamp}}",
            "footer":{"text": "${{github.event.head_commit.timestamp}}"}
            }    ]'
        uses: Ilshidur/action-discord@master
        with:
          args: 
